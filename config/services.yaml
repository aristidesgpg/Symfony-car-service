# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  uploads_directory: '%kernel.project_dir%/public/uploads/'
  csv_directory: '%kernel.project_dir%/public/csv/'
  reset_password_secret: '%env(RESET_PASSWORD_TOKEN_SECRET)%'
  sender: '%env(SENDER)%'
  app_env: '%env(APP_ENV)%'
  automate_endpoint_id: '%env(AUTOMATE_ENDPOINT_ID)%'
  cdk_dealer_id: '%env(CDK_DEALER_ID)%'
  dealerbuilt_location_id: '%env(DEALERBUILT_LOCATION_ID)%'
  dealertrack_company: '%env(DEALERTRACK_COMPANY)%'
  dealertrack_enterprise: '%env(DEALERTRACK_ENTERPRISE)%'
  soap_directory: '%kernel.project_dir%/src/Soap/'
  nmi_username: '%env(NMI_USERNAME)%'
  nmi_password: '%env(NMI_PASSWORD)%'
services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false
    bind:
      $iserviceLogger: '@monolog.logger.iservice'
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: [ 'controller.service_arguments' ]
  App\Service\ShortUrlHelper:
    arguments:
      - '%env(SHORT_URL_ACCESS_TOKEN)%'
  Twilio\Rest\Client:
    arguments:
      - '%env(TWILIO_SID)%'
      - '%env(TWILIO_AUTH_TOKEN)%'

  #service locators
  _instanceof:
    App\Service\DMS\DMSClientInterface:
      tags:
        - { name: "dms_clients" }

  App\Service\DMS\DMS:
    arguments: [ !tagged_locator { tag: 'dms_clients', default_index_method: 'getDefaultIndexName' } ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  #Custom Transport
  App\Service\Mailer\ISRETransportFactory:
    tags: [ mailer.transport_factory ]

